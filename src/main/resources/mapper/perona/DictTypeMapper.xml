<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guigui.perona.mapper.DictTypeMapper">
    <resultMap type="DictType" id="DictTypeResult">
        <result property="dictId" column="dict_id"/>
        <result property="dictName" column="dict_name"/>
        <result property="dictType" column="dict_type"/>
        <result property="status" column="status"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="dictTypeFields">dict_id, dict_name, dict_type, status, create_by, create_time, update_by, update_time, remark</sql>

    <select id="selectDictTypeList" parameterType="DictType" resultMap="DictTypeResult">
        select
        <include refid="dictTypeFields"/>
        from dict_type
        <where>  
            <if test="dictName != null  and dictName != ''"> and dict_name like concat('%', #{dictName}, '%')</if>
            <if test="dictType != null  and dictType != ''"> and dict_type = #{dictType}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectDictTypeById" parameterType="Long" resultMap="DictTypeResult">
        select
        <include refid="dictTypeFields"/>
        from dict_type
        where dict_id = #{dictId}
    </select>
        
    <insert id="insertDictType" parameterType="DictType" useGeneratedKeys="true" keyProperty="dictId">
        insert into dict_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="dictName != null  and dictName != ''">dict_name,</if>
            <if test="dictType != null  and dictType != ''">dict_type,</if>
            <if test="status != null  and status != ''">status,</if>
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateBy != null  and updateBy != ''">update_by,</if>
            <if test="updateTime != null ">update_time,</if>
            <if test="remark != null  and remark != ''">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="dictName != null  and dictName != ''">#{dictName},</if>
            <if test="dictType != null  and dictType != ''">#{dictType},</if>
            <if test="status != null  and status != ''">#{status},</if>
            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null ">#{updateTime},</if>
            <if test="remark != null  and remark != ''">#{remark},</if>
         </trim>
    </insert>

    <update id="updateDictType" parameterType="DictType">
        update dict_type
        <trim prefix="SET" suffixOverrides=",">
            <if test="dictName != null  and dictName != ''">dict_name = #{dictName},</if>
            <if test="dictType != null  and dictType != ''">dict_type = #{dictType},</if>
            <if test="status != null  and status != ''">status = #{status},</if>
            <if test="createBy != null  and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
            <if test="remark != null  and remark != ''">remark = #{remark},</if>
        </trim>
        where dict_id = #{dictId}
    </update>

    <delete id="deleteDictTypeById" parameterType="Long">
        delete from dict_type where dict_id = #{dictId}
    </delete>

    <delete id="deleteDictTypeByIds" parameterType="String">
        delete from dict_type where dict_id in 
        <foreach item="dictId" collection="array" open="(" separator="," close=")">
            #{dictId}
        </foreach>
    </delete>

    <select id="checkDictTypeUnique" parameterType="String" resultMap="DictTypeResult">
        select
        <include refid="dictTypeFields"/>
        from dict_type
        where dict_type = #{dictType}
    </select>

    <select id="selectDictTypeAll" resultMap="DictTypeResult">
        select
        <include refid="dictTypeFields"/>
        from dict_type
    </select>

    <select id="selectDictTypeByType" parameterType="String" resultMap="DictTypeResult">
        select
        <include refid="dictTypeFields"/>
        from dict_type
        where dict_type = #{dictType}
    </select>
    
</mapper>