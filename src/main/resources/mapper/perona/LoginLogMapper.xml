<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guigui.perona.mapper.LoginLogMapper">
    <resultMap type="LoginLog" id="LoginLogResult">
        <result property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="ip" column="ip"/>
        <result property="location" column="location"/>
        <result property="createTime" column="create_time"/>
        <result property="device" column="device"/>
        <result property="status" column="status"/>
        <result property="msg" column="msg"/>
    </resultMap>

    <sql id="loginLogFields">id, username, ip, location, create_time, device, status, msg</sql>

    <select id="selectLoginLogList" parameterType="LoginLog" resultMap="LoginLogResult">
        select
        <include refid="loginLogFields"/>
        from login_log
        <where>  
            <if test="username != null  and username != ''"> and username like concat('%', #{username}, '%')</if>
            <if test="ip != null  and ip != ''"> and ip = #{ip}</if>
            <if test="location != null  and location != ''"> and location = #{location}</if>
            <if test="device != null  and device != ''"> and device = #{device}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="msg != null  and msg != ''"> and msg = #{msg}</if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                and date_format(login_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                and date_format(login_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
            </if>
        </where>
    </select>
    
    <select id="selectLoginLogById" parameterType="Long" resultMap="LoginLogResult">
        select
        <include refid="loginLogFields"/>
        from login_log
        where id = #{id}
    </select>
        
    <insert id="insertLoginLog" parameterType="LoginLog" useGeneratedKeys="true" keyProperty="id">
        insert into login_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null  and username != ''">username,</if>
            <if test="ip != null  and ip != ''">ip,</if>
            <if test="location != null  and location != ''">location,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="device != null  and device != ''">device,</if>
            <if test="status != null  and status != ''">status,</if>
            <if test="msg != null  and msg != ''">msg,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null  and username != ''">#{username},</if>
            <if test="ip != null  and ip != ''">#{ip},</if>
            <if test="location != null  and location != ''">#{location},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="device != null  and device != ''">#{device},</if>
            <if test="status != null  and status != ''">#{status},</if>
            <if test="msg != null  and msg != ''">#{msg},</if>
         </trim>
    </insert>

    <update id="updateLoginLog" parameterType="LoginLog">
        update login_log
        <trim prefix="SET" suffixOverrides=",">
            <if test="username != null  and username != ''">username = #{username},</if>
            <if test="ip != null  and ip != ''">ip = #{ip},</if>
            <if test="location != null  and location != ''">location = #{location},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="device != null  and device != ''">device = #{device},</if>
            <if test="status != null  and status != ''">status = #{status},</if>
            <if test="msg != null  and msg != ''">msg = #{msg},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteLoginLogById" parameterType="Long">
        delete from login_log where id = #{id}
    </delete>

    <delete id="deleteLoginLogByIds" parameterType="String">
        delete from login_log where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>